import pygame
from plane_sprites import *


class PlaneGame(object) :
     "" "
    飞机大战游戏主体
    " ""

     def __init__ ( self ) :
         print ( "游戏初始化" )
         self .screen = pygame.display.set_mode(SCREEN_RECT.size)
         self .clock = pygame.time.Clock()
         self .__create_sprites()
        pygame.time.set_timer(CREATE_ENEMY_EVENT, 1000 )
        pygame.time.set_timer(HERO_FIRE_EVENT, 500 )

     def start_game( self ) :
         print ( "游戏开始" )
         while True :
             # 1.设置帧率 2.设置监听 3.碰撞检测 4.更新碰撞精灵组 5.更新显示
             self .clock.tick(FRAME_PRR_SEC)
             self .__event_handler()
             self .__check_collide()
             self .__update_sprite()
            pygame.display.update()

     def __create_sprites( self ) :
        bg1 = Background()
        bg2 = Background(is_alt = True )

         self .bg_group = pygame.sprite.Group(bg1, bg2)

         # 创建敌机精灵组
         self .enemy_group = pygame.sprite.Group()

         self .hero = Hero()
         self .hero_group = pygame.sprite.Group( self .hero)

     def __event_handler( self ) :
         for event in pygame.event.get() :
             if event. type == pygame.QUIT :
                PlaneGame.__game_over()
             elif event. type == HERO_FIRE_EVENT :
                 self .hero.fire()

             elif event. type == pygame.USEREVENT :
                enemy = Enemy()
                 self .enemy_group.add(enemy)
        keys_pressed = pygame.key.get_pressed()
         if keys_pressed[pygame.K_RIGHT] :
             self .hero.speed = 5
         elif keys_pressed[pygame.K_LEFT] :
             self .hero.speed = - 5
         else :
             self .hero.speed = 0

     def __check_collide( self ) :
        pygame.sprite.groupcollide( self .hero.bullets, self .enemy_group, True , True )
        enemies = pygame.sprite.spritecollide( self .hero, self .enemy_group, True )
         if len (enemies) > 0 :
             self .hero.kill()
             self .__game_over()

     def __update_sprite( self ) :
         self .bg_group.update()
         self .bg_group.draw( self .screen)
         self .enemy_group.update()
         self .enemy_group.draw( self .screen)
         self .hero_group.update()
         self .hero_group.draw( self .screen)
         self .hero.bullets.update()
         self .hero.bullets.draw( self .screen)

    @staticmethod
     def __game_over() :
         print ( "游戏结束" )
        pygame.quit()
        exit()


if __name__ == '__main__' :
    game = PlaneGame()
    game.start_game()
